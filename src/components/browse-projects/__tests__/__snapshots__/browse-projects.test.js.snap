// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing <BrowseProjects /> component should render correctly 1`] = `
<BrowseProjects
  boxes={
    Object {
      "agencies": Array [
        Object {
          "checked": false,
          "name": "test-name",
          "value": "TV",
        },
      ],
      "languages": Array [
        Object {
          "checked": false,
          "name": "test-name",
          "value": "TV",
        },
      ],
      "licenses": Array [
        Object {
          "checked": false,
          "name": "test-name",
          "value": "TV",
        },
      ],
      "usageTypes": Array [
        Object {
          "checked": false,
          "name": "test-name",
          "value": "TV",
        },
      ],
    }
  }
  browseParams={
    Object {
      "filters": Array [],
      "page": 1,
      "size": 10,
      "sort": "data_quality",
    }
  }
  browseResults={
    Object {
      "params": Object {
        "agencies": Array [],
        "languages": Array [],
        "licenses": Array [],
        "page": 1,
        "size": 10,
        "sort": "data_quality",
        "usageTypes": Array [],
      },
      "repos": Array [
        Object {
          "repoID": "id-1",
        },
      ],
      "total": 1,
    }
  }
  filterTags={Array []}
  onFilterBoxChange={[Function]}
  onFilterTagClick={[Function]}
  onSortChange={[Function]}
  repos={
    Array [
      Object {
        "repoID": "id-1",
      },
    ]
  }
  saveFilterData={[Function]}
  selectedPage={1}
  selectedPageSize={10}
  selectedSorting="data_quality"
  sortOptions={
    Array [
      Object {
        "label": "Data Quality",
        "selected": true,
        "value": "data_quality",
      },
      Object {
        "label": "A-Z",
        "selected": false,
        "value": "a-z",
      },
      Object {
        "label": "Last Updated",
        "selected": false,
        "value": "last_update",
      },
    ]
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
  total={1}
  updatePage={[Function]}
/>
`;
